// Generated by CoffeeScript 1.4.0

define(function() {
  return function(_arg) {
    var beforeEachRequire;
    beforeEachRequire = _arg.beforeEachRequire;
    beforeEachRequire(['cell/Ext'], function(Ext) {
      this.Ext = Ext;
    });
    return describe('Ext.extend(func:function)', function() {
      beforeEach(function() {
        return this.NewExt = this.Ext.extend(this.func = jasmine.createSpy('extend func'));
      });
      it('returns an Ext class', function() {
        return expect((new this.NewExt) instanceof this.Ext).toBe(true);
      });
      return describe('@constructor(options)', function() {
        beforeEach(function() {
          return this.newext = this.NewExt(this.options = {});
        });
        it('can be called without new', function() {
          return expect(this.NewExt() instanceof this.Ext).toBe(true);
        });
        it('sets @options', function() {
          return expect(this.newext.options).toBe(this.options);
        });
        return describe('@run(element)', function() {
          beforeEach(function() {
            return this.newext.run(this.element = {});
          });
          return it('calls func(element, options), with this set properly', function() {
            expect(this.func.callCount).toBe(1);
            expect(this.func).toHaveBeenCalledWith(this.element, this.options);
            return expect(this.func.calls[0].object).toBe(this.newext);
          });
        });
      });
    });
  };
});
