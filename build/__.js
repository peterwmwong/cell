// Generated by CoffeeScript 1.4.0

define(['cell', 'jquery', 'underscore', 'backbone', 'ref'], function(cell, $, _, Backbone, ref) {
  var __, _isJQueryish, _isObj, _onReferenceChangeAttr, _onReferenceChangeChild, _parseHAML, _renderNodes;
  _isJQueryish = typeof Zepto === 'function' ? Zepto.fn.isPrototypeOf.bind(Zepto.fn) : function(o) {
    return o.jquery;
  };
  _isObj = function(o) {
    return o && o.constructor === Object;
  };
  _onReferenceChangeChild = function(ref, val) {
    this.html(val);
  };
  _onReferenceChangeAttr = function(ref, val) {
    this[0].setAttribute(this[1], val);
  };
  _renderNodes = function(parent, nodes) {
    var $parent, c;
    $parent = void 0;
    while ((c = nodes.pop()) != null) {
      if (_.isElement(c)) {
        parent.insertBefore(c, parent.firstChild);
      } else if (_isJQueryish(c)) {
        c.appendTo(parent);
      } else if (_.isArray(c)) {
        nodes = nodes.concat(c);
      } else if (c instanceof ref.Reference) {
        $parent || ($parent = $(parent));
        c.onChangeAndDo(_onReferenceChangeChild, $parent);
      } else {
        parent.insertBefore(document.createTextNode(c), parent.firstChild);
      }
    }
    return parent;
  };
  _parseHAML = function(haml) {
    var m, v;
    if (m = /^(\w+)?(#([\w\-]+))*(\.[\w\.\-]+)?$/.exec(haml)) {
      return {
        tag: m[1] || 'div',
        id: m[3],
        className: (v = m[4]) ? v.slice(1).replace(/\./g, ' ') : ''
      };
    }
  };
  __ = function(viewOrHAML, optionsOrFirstChild) {
    var children, el, haml, options, parent;
    if (!viewOrHAML) {
      return;
    }
    children = [].slice.call(arguments, 2);
    options = _isObj(optionsOrFirstChild) ? optionsOrFirstChild : (children.unshift(optionsOrFirstChild), void 0);
    parent = typeof viewOrHAML === 'string' ? (haml = _parseHAML(viewOrHAML)) ? (el = document.createElement(haml.tag), haml.id ? el.setAttribute('id', haml.id) : void 0, haml.className ? el.className = haml.className : void 0, _.each(options, function(v, k) {
      if (v instanceof ref.Reference) {
        v.onChangeAndDo(_onReferenceChangeAttr, [el, k]);
      } else {
        el.setAttribute(k, v);
      }
    }), el) : void 0 : viewOrHAML.prototype instanceof Backbone.View ? (new viewOrHAML(options)).render().el : void 0;
    if (!parent) {
      throw "__(): unsupported argument " + viewOrHAML;
    }
    return _renderNodes(parent, children);
  };
  __.$ = function() {
    return $(__.apply(null, arguments));
  };
  cell.Cell.prototype.__ = __;
  cell.Cell.prototype.render = function() {
    _renderNodes(this.el, [this.renderEl(__)]);
    this.afterRender();
    return this;
  };
  return __;
});
