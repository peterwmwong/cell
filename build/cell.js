// Generated by CoffeeScript 1.3.3

define(['backbone'], function() {
  var exp, noop, pic;
  noop = function() {};
  $(function() {
    $('[data-cell]').each(function(i, el) {
      var cellname;
      if (cellname = this.getAttribute('data-cell')) {
        require(["cell!" + cellname], function(CType) {
          el.appendChild(new CType().render().el);
        });
      }
    });
  });
  pic = void 0;
  return exp = {
    Cell: Backbone.View.extend({
      render: function() {
        this.render_el && (this.el.innerHTML = this.render_el());
        if (typeof this.after_render === "function") {
          this.after_render();
        }
        return this;
      }
    }),
    pluginBuilder: 'cell-builder-plugin',
    load: function(name, req, load, config) {
      req([name], function(def) {
        var el;
        if (def !== Object(def)) {
          throw "Couldn't load " + name + " cell";
        }
        pic || (pic = (exp.__preinstalledCells__ || (exp.__preinstalledCells__ = {})));
        if (!pic[name]) {
          pic[name] = true;
          el = document.createElement('link');
          el.href = req.toUrl("" + name + ".css");
          el.rel = 'stylesheet';
          el.type = 'text/css';
          $('head').append(el);
        }
        def.className = def.name = /(.*\/)?(.*)$/.exec(name)[2];
        def.render_el || (def.render_el = noop);
        def.after_render || (def.after_render = noop);
        load(exp.Cell.extend(def));
      });
    }
  };
});
