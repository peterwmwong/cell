// Generated by CoffeeScript 1.6.2
define(function() {
  var constrProp, protoProp;

  constrProp = 'constructor';
  protoProp = 'prototype';
  return function(proto) {
    var Child, ChildSurrogate, Parent, Surrogate, childConstructor, childProto, k;

    Parent = this;
    Child = function() {
      if (!(this instanceof Child)) {
        return Child.apply(new ChildSurrogate(), arguments);
      }
      (childConstructor || Parent).apply(this, arguments);
      return this;
    };
    Child.extend = Parent.extend;
    Surrogate = function() {};
    Surrogate[protoProp] = Parent[protoProp];
    ChildSurrogate = function() {};
    childProto = ChildSurrogate[protoProp] = Child[protoProp] = new Surrogate();
    if (proto) {
      if (proto.hasOwnProperty(constrProp)) {
        childConstructor = proto[constrProp];
      }
      for (k in proto) {
        childProto[k] = proto[k];
      }
      if (childConstructor) {
        childProto[constrProp] = childConstructor;
      }
    }
    return Child;
  };
});

/*
//@ sourceMappingURL=extend.map
*/
