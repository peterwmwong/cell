// Generated by CoffeeScript 1.6.1

define(function() {
  var constrProp, protoProp;
  constrProp = 'constructor';
  protoProp = 'prototype';
  return function(proto) {
    var Child, Parent, Surrogate, k;
    Parent = this;
    Child = function(options) {
      if (!(this instanceof Child)) {
        return new Child(options);
      }
      Parent.call(this, options);
      if (proto && proto[constrProp]) {
        proto[constrProp].call(this, options);
      }
    };
    Child.extend = Parent.extend;
    Surrogate = function() {};
    Surrogate[protoProp] = Parent[protoProp];
    Child[protoProp] = new Surrogate();
    if (proto) {
      for (k in proto) {
        Child[protoProp][k] = proto[k];
      }
      if (proto[constrProp]) {
        Child[protoProp][constrProp] = proto[constrProp];
      }
    }
    return Child;
  };
});
