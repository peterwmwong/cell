// Generated by CoffeeScript 1.6.2
define(['util/type', 'cell/Events', 'cell/util/spy'], function(type, Events, spy) {
  var Model;

  Model = Events.extend({
    constructor: function(attributes) {
      Events.call(this);
      this._a = attributes || {};
      this.collection = void 0;
    },
    attributes: function() {
      var attr, result;

      this._s('all');
      result = {};
      for (attr in this._a) {
        result[attr] = this._a[attr];
      }
      return result;
    },
    get: function(key) {
      this._s("change:" + key);
      return this._a[key];
    },
    set: function(key, value) {
      var collection, event, old_value;

      if ((type.isS(key)) && (this._a[key] !== value)) {
        old_value = this._a[key];
        this.trigger((event = "change:" + key), this, (this._a[key] = value), old_value);
        if (collection = this.collection) {
          collection.trigger(event, this, value, old_value);
        }
        return true;
      }
    },
    destroy: function() {
      Events.prototype.destroy.call(this);
      if (this.collection) {
        this.collection.remove([this]);
      }
      delete this._a;
      this.destroy = this.attributes = this.get = this.set = function() {};
    },
    _s: spy.addModel
  });
  return Model;
});

/*
//@ sourceMappingURL=Model.map
*/
