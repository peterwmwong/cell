// Generated by CoffeeScript 1.4.0

define(['util/hash'], function(hash) {
  var log, onChange;
  onChange = function() {
    try {
      this.cb(this.expr());
    } catch (_error) {}
  };
  log = false;
  return {
    addCol: function() {
      if (log) {
        log.c[hash(this)] = this;
      }
    },
    addModel: function(key) {
      var entry, hashkey;
      if (log) {
        if (!(entry = log.m[hashkey = hash(this)])) {
          entry = log.m[hashkey] = {
            m: this,
            props: {}
          };
        }
        entry.props[key] = 1;
      }
    },
    watch: function(expr, cb) {
      var accesslog, c, collectionHashKey, context, m, modelHashKey, p, props, value, _ref, _ref1;
      context = {
        expr: expr,
        cb: cb
      };
      log = {
        m: {},
        c: {}
      };
      try {
        value = expr();
      } catch (_error) {}
      accesslog = log;
      log = false;
      _ref = accesslog.m;
      for (modelHashKey in _ref) {
        m = _ref[modelHashKey];
        if ((props = m.props)[void 0]) {
          m.m.on('all', onChange, context);
        } else {
          for (p in props) {
            m.m.on("change:" + p, onChange, context);
          }
        }
      }
      _ref1 = accesslog.c;
      for (collectionHashKey in _ref1) {
        c = _ref1[collectionHashKey];
        c.on("all", onChange, context);
      }
      cb(value);
    }
  };
});
