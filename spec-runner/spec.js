// Generated by CoffeeScript 1.3.3
(function() {
  var __slice = [].slice;

  define({
    load: function(name, req, load, config) {
      return req([name], function(Spec) {
        return load(function() {
          var ctx_name_salt;
          ctx_name_salt = 0;
          return describe(/.*\/specs\/cell_(.*).spec$/.exec(name)[1], function() {
            var ctx, specRequire;
            specRequire = null;
            ctx = void 0;
            return Spec({
              beforeEachRequire: function(deps, cb) {
                return beforeEach(function() {
                  var ctxName, dep_modules;
                  if (ctx) {
                    $("[data-requirecontext='" + ctx.contextName + "']").remove();
                  }
                  specRequire = window.require.config({
                    context: ctxName = "specs" + (ctx_name_salt++),
                    baseUrl: '/specs/',
                    paths: {
                      cell: '../build/cell',
                      __: '../build/__'
                    }
                  });
                  ctx = window.require.s.contexts[ctxName];
                  dep_modules = void 0;
                  runs(function() {
                    return specRequire(deps, function() {
                      var dms;
                      dms = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
                      return dep_modules = dms;
                    });
                  });
                  waitsFor(function() {
                    return dep_modules != null;
                  });
                  return runs(function() {
                    return cb.apply(this, dep_modules);
                  });
                });
              }
            });
          });
        });
      });
    }
  });

}).call(this);
