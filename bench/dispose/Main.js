// Generated by CoffeeScript 1.6.1

define(function(require) {
  var $, Backbone, Bench1Cell, benchCollection, benchModel, cell, run, times;
  Backbone = require('backbone');
  cell = require('cell');
  $ = require('jquery');
  times = [];
  benchModel = new Backbone.Model({
    key1: 'val1'
  });
  benchCollection = new Backbone.Collection();
  Bench1Cell = cell.Cell.extend({
    name: 'Bench1',
    after_render: function() {
      this.model.on('change:key1', (function() {
        return 'pww: model change:key1';
      }), this);
      return this.collection.on('reset', (function() {
        return 'pww: collection reset';
      }), this);
    },
    events: {
      'click': function() {
        return 'pww: click event';
      }
    }
  });
  run = function(doTime) {
    var $container, delta, i, start;
    $container = $('<div>');
    i = 1000;
    while (i-- > 0) {
      $container.append((new Bench1Cell({
        model: benchModel,
        collection: benchCollection
      })).render().$el);
    }
    start = window.performance.now();
    $container.remove();
    delta = window.performance.now() - start;
    console.log(delta);
    if (doTime) {
      return times.push(delta);
    }
  };
  $(function() {
    var j;
    j = 10;
    while (j-- > 0) {
      run(false);
    }
    j = 100;
    while (j-- > 0) {
      run(true);
    }
    $('body').html(_.reduce(times, (function(sum, el) {
      return sum + el;
    }), 0) / times.length);
  });
  return 1;
});
